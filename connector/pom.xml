<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2022 Google, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.google.cloud.hive</groupId>
    <artifactId>hive-bigquery-parent</artifactId>
    <version>${revision}</version>
    <relativePath>../hive-bigquery-parent</relativePath>
  </parent>

  <artifactId>hive-bigquery-connector</artifactId>
  <version>${revision}</version>

  <licenses>
      <license>
          <name>Apache License, Version 2.0</name>
          <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
          <distribution>repo</distribution>
      </license>
  </licenses>


  <dependencies>

    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-storage</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.cloud.spark</groupId>
      <artifactId>bigquery-connector-common</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-netty-shaded</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.3</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.parent.groupId}</groupId>
      <artifactId>shaded-dependencies</artifactId>
      <version>${project.parent.version}</version>
      <classifier>shaded</classifier>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.cloud.bigdataoss</groupId>
      <artifactId>gcs-connector</artifactId>
      <version>${gcs-connector.version}</version>
      <classifier>shaded</classifier>
      <scope>provided</scope>
      <exclusions>
        <!-- Exclude all GRPC dependencies to avoid some packaging issues -->
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ******* Testing dependencies ******* -->

    <dependency>
      <groupId>${project.parent.groupId}</groupId>
      <artifactId>shaded-test-dependencies</artifactId>
      <version>${project.parent.version}</version>
      <classifier>shaded</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>1.9.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.github.hiverunner</groupId>
      <artifactId>hiverunner</artifactId>
      <version>${hiverunner.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.tez</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>hive-serde</artifactId>
          <groupId>org.apache.hive</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hive-upgrade-acid</artifactId>
          <groupId>org.apache.hive</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hive-webhcat-java-client</artifactId>
          <groupId>org.apache.hive.hcatalog</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hive-jdbc</artifactId>
          <groupId>org.apache.hive</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hive-service</artifactId>
          <groupId>org.apache.hive</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-mapreduce-client-common</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-annotations</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-yarn-client</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-mapreduce-client-core</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-annotations</artifactId>
          <groupId>com.fasterxml.jackson.core</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>${truth.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTests.java</exclude>
            <exclude>**/*AcceptanceTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <compilerArgs>
                <arg>${compiler.default.pkginfo.flag}</arg>
              </compilerArgs>
              <excludes>
                <exclude>${compiler.default.exclude}</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${maven-exec-plugin.version}</version>
        <configuration>
          <cleanupDaemonThreads>false</cleanupDaemonThreads>
          <systemProperties>
            <systemProperty>
              <key>java.util.logging.config.file</key>
              <value>logging.properties</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${project.artifactId}-${project.version}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>module-info.class</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>android</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.android</shadedPattern>
                  <includes>
                    <include>android.annotation.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <pattern>autovalue</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.autovalue</shadedPattern>
                  <includes>
                    <include>autovalue.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <pattern>com</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.com</shadedPattern>
                  <includes>
                    <include>com.fasterxml.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <!-- There are too many com.google prefixes -->
                  <pattern>com.google</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.com.google</shadedPattern>
                  <excludes>
                    <exclude>com.google.cloud.hadoop.**</exclude>
                    <exclude>com.google.cloud.hive.bigquery.**</exclude>
                  </excludes>
                </relocation>
                <relocation>
                  <pattern>javax</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.javax</shadedPattern>
                  <includes>
                    <include>javax.annotation.**</include>
                    <include>javax.inject.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <pattern>io</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.io</shadedPattern>
                  <includes>
                    <include>io.grpc.**</include>
                    <include>io.netty.**</include>
                    <include>io.opencensus.**</include>
                    <include>io.perfmark.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <pattern>org</pattern>
                  <shadedPattern>com.google.cloud.hive.bigquery.repackaged.org</shadedPattern>
                  <includes>
                    <include>org.aopalliance.**</include>
                    <include>org.apache.arrow.**</include>
                    <include>org.apache.commons.codec.**</include>
                    <include>org.apache.http.**</include>
                    <include>org.codehaus.**</include>
                    <include>org.json.**</include>
                    <include>org.checkerframework.**</include>
                    <include>org.threeten.**</include>
                  </includes>
                </relocation>
                <relocation>
                  <pattern>META-INF/native/libnetty</pattern>
                  <shadedPattern>META-INF/native/libcom_google_cloud_hive_bigquery_repackaged_netty
                  </shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/native/netty</pattern>
                  <shadedPattern>META-INF/native/com_google_cloud_hive_bigquery_repackaged_netty
                  </shadedPattern>
                </relocation>
              </relocations>
              <transformers>
                <!-- ServicesResourceTransformer is necessary to avoid this issue: "java.lang.IllegalStateException: Could not find policy 'pick_first'. Make sure its implementation is either registered to LoadBalancerRegistry or included in META-INF/services/io.grpc.LoadBalancerProvider from your jar files" -->
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"/>
              </transformers>
              <shadedArtifactAttached>false</shadedArtifactAttached>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.4.1</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <!-- we need it to run after the `package` phase, when the shade plugin runs -->
            <phase>verify</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
